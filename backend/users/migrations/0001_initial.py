# Generated by Django 5.2.6 on 2025-09-16 19:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('role', models.CharField(choices=[('TRAVELER', 'Viajero'), ('OPERATOR', 'Operador'), ('ADMIN', 'Administrador')], default='TRAVELER', max_length=50, verbose_name='Rol')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TravelerProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='traveler_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('cedula', models.CharField(blank=True, max_length=20, verbose_name='Cédula')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Número de Teléfono')),
                ('can_contact_by_whatsapp', models.BooleanField(default=True, verbose_name='¿Contactar por WhatsApp?')),
            ],
            options={
                'verbose_name': 'Perfil de Viajero',
                'verbose_name_plural': 'Perfiles de Viajero',
            },
        ),
        migrations.CreateModel(
            name='OperatorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='operator_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('organization_name', models.CharField(max_length=200, verbose_name='Nombre de la Organización')),
                ('rif_type', models.CharField(choices=[('V', 'V'), ('E', 'E'), ('J', 'J'), ('G', 'G')], max_length=1, verbose_name='Tipo de RIF')),
                ('rif_number', models.CharField(max_length=20, verbose_name='Número de RIF')),
                ('social_media_link', models.URLField(blank=True, verbose_name='Enlace a Red Social Principal')),
            ],
            options={
                'verbose_name': 'Perfil de Operador',
                'verbose_name_plural': 'Perfiles de Operador',
                'unique_together': {('rif_type', 'rif_number')},
            },
        ),
    ]
